# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: test.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='test.proto',
  package='test',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\ntest.proto\x12\x04test\"\x19\n\x0bTestRequest\x12\n\n\x02id\x18\x01 \x01(\x05\"\x1a\n\x0cTestResponse\x12\n\n\x02id\x18\x01 \x01(\x05\x32\x82\x02\n\x04Test\x12=\n\x10TestStreamSimple\x12\x11.test.TestRequest\x1a\x12.test.TestResponse\"\x00(\x01\x12=\n\x10TestSimpleStream\x12\x11.test.TestRequest\x1a\x12.test.TestResponse\"\x00\x30\x01\x12;\n\x10TestSimpleSimple\x12\x11.test.TestRequest\x1a\x12.test.TestResponse\"\x00\x12?\n\x10TestStreamStream\x12\x11.test.TestRequest\x1a\x12.test.TestResponse\"\x00(\x01\x30\x01\x62\x06proto3')
)




_TESTREQUEST = _descriptor.Descriptor(
  name='TestRequest',
  full_name='test.TestRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='test.TestRequest.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=45,
)


_TESTRESPONSE = _descriptor.Descriptor(
  name='TestResponse',
  full_name='test.TestResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='test.TestResponse.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=73,
)

DESCRIPTOR.message_types_by_name['TestRequest'] = _TESTREQUEST
DESCRIPTOR.message_types_by_name['TestResponse'] = _TESTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TestRequest = _reflection.GeneratedProtocolMessageType('TestRequest', (_message.Message,), dict(
  DESCRIPTOR = _TESTREQUEST,
  __module__ = 'test_pb2'
  # @@protoc_insertion_point(class_scope:test.TestRequest)
  ))
_sym_db.RegisterMessage(TestRequest)

TestResponse = _reflection.GeneratedProtocolMessageType('TestResponse', (_message.Message,), dict(
  DESCRIPTOR = _TESTRESPONSE,
  __module__ = 'test_pb2'
  # @@protoc_insertion_point(class_scope:test.TestResponse)
  ))
_sym_db.RegisterMessage(TestResponse)



_TEST = _descriptor.ServiceDescriptor(
  name='Test',
  full_name='test.Test',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=76,
  serialized_end=334,
  methods=[
  _descriptor.MethodDescriptor(
    name='TestStreamSimple',
    full_name='test.Test.TestStreamSimple',
    index=0,
    containing_service=None,
    input_type=_TESTREQUEST,
    output_type=_TESTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TestSimpleStream',
    full_name='test.Test.TestSimpleStream',
    index=1,
    containing_service=None,
    input_type=_TESTREQUEST,
    output_type=_TESTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TestSimpleSimple',
    full_name='test.Test.TestSimpleSimple',
    index=2,
    containing_service=None,
    input_type=_TESTREQUEST,
    output_type=_TESTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TestStreamStream',
    full_name='test.Test.TestStreamStream',
    index=3,
    containing_service=None,
    input_type=_TESTREQUEST,
    output_type=_TESTRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TEST)

DESCRIPTOR.services_by_name['Test'] = _TEST

# @@protoc_insertion_point(module_scope)
